# + ───────────────────────────────────────────────────────────────────────────────────────
# ! FROM: config_BTCUSDT.toml
# + ───────────────────────────────────────────────────────────────────────────────────────
offline             = false
view_only           = true   # + DISABLED
dstot_relative      = true   # * select to use flat line limit, or a relative line based on the dstot avg of last N vals
cooldown_mult       = 0      # * size of each countdown increment by g.long_buys
lowerclose_pct      = 0.0024 # * Adjust lower the EMA of close by this %
lowerclose_pct_bull = -0.001 # ! % of the closing price for the green line when BULL market
lowerclose_pct_bear = 0.004  # ! % of the closing price for the green line when BEAR market
dstot_buy           = 0.4    # * 40% - the starting limit of the dstot_lo limits
dstot_Dadj          = 0.0    # * the % to adjust the dstot_lo (cyan) line indexed buy 'g.long_buys' value
dstot_span          = 47     # * EMA span for cyan lower dstot_lo RELATIVE line
next_buy_drop       = []     # + DISABLED
# = next_buy_increments = 0.09 # * 5% - side of drop for each long_buy until sell
next_buy_increments = 0.00292  # ! 0.1% - side of drop for each long_buy until sell
long_pct_multiplier = 3      # + DISABLED ???
# + ───────────────────────────────────────────────────────────────────────────────────────
# ! RUNTIME OPTIMIZATION OPTIONS
# + ───────────────────────────────────────────────────────────────────────────────────────
show_textbox    = true
save            = true   # * save data to file on every transaction
log2file        = true   # * special log files, for debugging, in ./logs
log_mysql       = false   # * Turn off all GUI stuff... command line only - 40% faster
display         = true   # * Turn off all GUI stuff... command line only - 40% faster
headless        = false  # * Disable ALL GUI stuff, meant for headless only use
logging         = 50 #! CRITICAL = 50
# = logging          = 40 #! ERROR = 40
# = logging          = 30 #! WARNING = 30
# = logging          = 20 #! INFO = 20
# = logging          = 10 #! DEBUG = 10
# = logging          = 0  #! NOTSET = 0
# + ───────────────────────────────────────────────────────────────────────────────────────
datatype            = "live"    # * 'backtest' or 'live' only
testnet             = true      # * make sure this matches settings in keys.toml
# + ───────────────────────────────────────────────────────────────────────────────────────
# ! FOR 'live' <n>m OHLC DATA
# + ───────────────────────────────────────────────────────────────────────────────────────
load_on_boundary    = 300       # * 300 for 5min - used to % mod epoch
boundary_load_delay = 15        # * secs to wait after boundary - 15 for production
live_interval       = 300000    # * 300000 for 5min
timeframe           = "5m"      # * check that the timeframe listed here is supported in the o.interval setter in v2.py
                                # * in stream mode and this is not 0, will read backtest data and not update
since               = 24        # * hours - for LIVE only - tells how far back in history to get data
# + ───────────────────────────────────────────────────────────────────────────────────────
# ! FOR 'backtest' OHLC DATA
# + ───────────────────────────────────────────────────────────────────────────────────────
# = pair            = "ETH/BTC"
# = backtestfile    = "2yr.json"
# = backtestmeta    = "2yr_DATA.json"

pair            = "BTC/USDT"    # *  MUST use sep='/'
backtestfile    = "2_BTCUSDT.json"
backtestmeta    = "2_BTCUSDT_DATA.json"

startdate       = "2021-01-01 00:00:00"
# = startdate       = "2021-05-14 16:00:00" # big dip
# = startdate       = "2021-06-01 00:00:00" # big dip
# = startdate       = "2021-06-07 00:00:00" # big dip
enddate             = "2022-07-30 03:50:00" # * enddate use for debugging backtest only
# + ───────────────────────────────────────────────────────────────────────────────────────

datadir         = "data"
datalength      = 19800 # * NOT REALLY NECESSARY - for BACKTEST only - 2yr, 39999
datawindow      = 288   # * 288 is 24 hrs @ 5min


backtest_priceconversion_meta   = "0_BTCUSD_DATA.json"
backtest_priceconversion        = "0_BTCUSD.json"
secrets_file                    = ".secrets/keys.toml"
#########################################################################
short_purch_qty     = 0.000414  # ! % of reserve_seed for short buys
long_purch_qty      = 0.000414  # ! starting % of reserve_seed for long buys
reserve_seed        = 1         # ! how many actual assets (ETH, BTC, etc) we have allocated
margin_x            = 1         # ! the margin multiplier
margin_int_pt       = 0.000     # ! Binance interest per day
stoplimit           = 0.05    # * 5% limit - used if/when only buyiing/selling 1 asset at a time
buy_fee             = 0.001   # * Binance fee
sell_fee            = 0.001   # * Binance fee
offline_price       = 60000   # * Currently not used - replaced with BTC 'bigdata' history
convert_price       = false   # ! Show base quote price in quote currency or covert to USD
price_conversion    = "BTC/USD"
conversion          = false # + DISABLED?
maxbuys             = 10    # * max g.subtot_qty
#########################################################################
#xflag01             =  true  # * * currently used to toggle LBLOW filer in triggers
#########################################################################
2nd_screen          = false  # * show main graph on a 2nd screen
verbose             = false  # * not used - shows debug data to console
interval            = 1.00   # ! can't be 0 or the 'plt' non-blocking pause will loop forever
figsize             = [12,10]# * size of the GUI screen
figsize2            = [18,1] # * size of the 2nd GUI screen, if on
allow_pause         = false
#########################################################################
bsuid               = 0      # * uniqiq ID for each bus/sell session
ffmaps_lothresh     = -15    # * lo limits for the FFT chart - NOT USED?
ffmaps_hithresh     = 15     # * hi limits for the FFT chart - NOT USED?
bbDelta_lim         = 25     # * the delta between - something - NOT USED?
amp_lim             = 0.0026 # + NOT USED???
sigffdeltahi_lim    = 5000   # + NOT USED ???
dstot_sell          = 0.3    # + NOT USED - I think this has been overridden by teh inverse of dstot_buy
#########################################################################
testpair            = ["BUY_tvb3","SELL_tvb3"] # ! Different for stream
# = testpair          = ["BUY_always","SELL_always"]
# = testpair          = ["BUY_never","SELL_never"]
statefile           = "state.json" # * file to use when saving state to file
#########################################################################
[[mavs]] # * mav[0]
    on      = false
    length  = 20
    color   = "green"
    width   = 3
    alpha   = 0
    mavnum  = 0
[[mavs]] # * mav[1]  - currently used for bull/bear indication
    on      = true
    length  = 40
    color   = "orange"
    width   = 1
    alpha   = 1
    mavnum  = 1
[[mavs]] # * mav[2]
    on      = false
    length  = 60
    color   = "red"
    width   = 3
    alpha   = 0
    mavnum  = 2
[[mavs]] # * mav[3]
    on      = false
    length  = 288
    color   = "lime"
    width   = 3
    alpha   = 0.3
    mavnum  = 3
#########################################################################
# ! Currently not used - 6 element moving average array
[[MAsn]] # * MAsn[0]
    on      = false
    span    = 8
    color   = "white"
    width   = 1
    alpha   = 1
[[MAsn]] # * MAsn[1]
    on      = false
    span    = 16
    color   = "white"
    width   = 1
    alpha   = 1
[[MAsn]] # * MAsn[2]
    on      = false
    span    = 32
    color   = "white"
    width   = 1
    alpha   = 1
[[MAsn]] # * MAsn[3]
    on      = false
    span    = 64
    color   = "white"
    width   = 1
    alpha   = 1
[[MAsn]] # * MAsn[4]
    on      = false
    span    = 128
    color   = "white"
    width   = 1
    alpha   = 1
[[MAsn]] # * MAsn[5]
    on      = false
    span    = 256
    color   = "white"
    width   = 1
    alpha   = 1

#########################################################################
[mbpfilter]
    name    = "bandpass"
    N       = 1
    Wn      = [ [0.01, 0.999] ]
# =     Wn      = [ [0.01, 0.1],[0.1, 0.2],[0.2, 0.3],[0.3, 0.4],[0.4, 0.5],[0.5, 0.6] ]
# =     Wn      = [ [0.01, 0.1],[0.1, 0.2],[0.2, 0.3],[0.3, 0.4],[0.4, 0.5],[0.5, 0.9999] ]
# =     Wn      = [ [0.01, 0.999],[0.01, 0.999],[0.01, 0.999],[0.01, 0.999],[0.01, 0.999],[0.01, 0.999] ]
# =     Wn      = [ [0.08, 0.999],[0.08, 0.999],[0.08, 0.999],[0.08, 0.999],[0.08, 0.999],[0.08, 0.999]]
#########################################################################
[buy_marker]
    [buy_marker.S] # * short buy
        color   = "yellow"
        size    = 20
        alpha   = 0.5
    [buy_marker.L] # * long buy
        color   = "red"
        size    = 20
        alpha   = 0.5
#########################################################################
[figtext]
    color = "olive"
[styles]
    [styles.close]
        color   = "violet"
        width   = 2
        alpha   = 0.5
    [styles.lowerClose]
        color   = "green"
        width   = 2
        alpha   = 1
    [styles.coverprice]
        color   = "yellow"
        width   = 1
        alpha   = 1
    [styles.buyunder]
        color   = "yellow"
        width   = 1
        alpha   = 1
    [styles.avgprice]
        color   = "fuchsia"
        width   = 1
        alpha   = 1
    [styles.Dstot]
        color   = "orange"
        width   = 1
        alpha   = 0.8
    [styles.Dstot_lo]
        color   = "cyan"
        width   = 1
        alpha   = 0.3
    [styles.Dstot_hi]
        color   = "magenta"
        width   = 1
        alpha   = 0.3
    [styles.buyface]
# =         color   = "red"
        color   = "#330033"
#########################################################################
